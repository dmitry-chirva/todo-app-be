<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="issues">
    <option name="index">
      <map>
        <entry key="$PROJECT_DIR$/../design-patterns/src/index.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/.env">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/config/index.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/drivers/databases/entities/task.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/drivers/databases/entities/user.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/drivers/databases/typeorm/types.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/drivers/databases/types.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/drivers/framework/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/repositories/task..base.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/repositories/task.base.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/repositories/user.base.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/task.entity.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/task.entity.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/entities/user.entity.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/modules/task/task.controller.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/modules/task/task.factory.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/modules/task/task.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/modules/user/user.factory.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/modules/user/user.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/ormconfig.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/server.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/shared/constants/statuses.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/tsconfig.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/use-cases/task/create-task.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/use-cases/task/delete-task.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/use-cases/task/get-task.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../task-api/use-cases/task/get-tasks.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-api/db.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-api/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-api/server.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/execude.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/files/file1.txt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/routers.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/server.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/static/index.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task10.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task11.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task12.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task2.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task3.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task4.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task5.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task6.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task7.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task8.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../test-node/task9.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.env">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/prisma/schema.prisma">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/config/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/database/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/database/redis.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/framework/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/logger/constants.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/logger/logger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/drivers/storage/async-storage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/entities/todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/entities/user.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/middlewares/auth-token.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/middlewares/blacklist.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/middlewares/error-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/middlewars/auth-token.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/middlewars/error-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/auth/auth.controller.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/auth/auth.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/todo/todo.controller.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/todo/todo.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/todo/todo.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/todo/todo.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/user/auth.controller.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/user/user.controller.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/user/user.repository.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/modules/user/user.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/routes/user.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/errors.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/auth/logout.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/auth/refresh.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/auth/signin.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/clear-todos.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/create-todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/delete-todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/edit-todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/get-complete-todos.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/get-completed-todos.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/get-todos.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/get-uncompleted-todos.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/signin.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/signup.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/todo/create-todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/use-cases/toggle-todo.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/tsconfig.json">
          <value>
            <set />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>